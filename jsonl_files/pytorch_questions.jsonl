{"skill":"PyTorch","difficulty":"easy","type":"multiple_choice","question":"What is the primary purpose of the PyTorch library?","options":{"A":"Web development","B":"Game development","C":"Machine learning","D":"Database management"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"easy","type":"multiple_choice","question":"How do you create a tensor filled with zeros in PyTorch?","options":{"A":"torch.tensor(0)","B":"torch.zeros(1)","C":"torch.zeros_like(1)","D":"torch.ones(0)"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which of the following statements will correctly enable autograd for a tensor in PyTorch?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nx = torch.tensor([1.0, 2.0, 3.0], requires_grad=True)</code></pre></div>","options":{"A":"torch.autograd.enable_grad(x)","B":"x.requires_grad_(True)","C":"x.enable_grad()","D":"torch.autograd.set_grad_enabled(True)"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"How can you detach a tensor from the computation graph in PyTorch?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nx = torch.tensor([1.0, 2.0, 3.0], requires_grad=True)\ny = x + 2\nz = y.detach()</code></pre></div>","options":{"A":"y.no_grad()","B":"y.stop_grad()","C":"y.detach()","D":"y.detach_()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What will be the output of the following code snippet?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nx = torch.tensor([1.0, 2.0, 3.0], requires_grad=True)\ny = x ** 2\ny.backward(torch.tensor([1.0, 1.0, 1.0]))\nprint(x.grad)</code></pre></div>","options":{"A":"tensor([1.0, 1.0, 1.0])","B":"tensor([2.0, 4.0, 6.0])","C":"tensor([2.0, 4.0, 9.0])","D":"tensor([1.0, 2.0, 3.0])"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which of the following methods is used to move a tensor to GPU in PyTorch?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nx = torch.tensor([1.0, 2.0, 3.0])\nx = x.cuda()</code></pre></div>","options":{"A":"x.to_gpu()","B":"x.to_cuda()","C":"x.cuda()","D":"x.gpu()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which function is used to calculate the loss in a neural network model in PyTorch?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nimport torch.nn as nn\nloss_fn = nn.CrossEntropyLoss()</code></pre></div>","options":{"A":"nn.Loss()","B":"nn.CrossEntropy()","C":"nn.CrossEntropyLoss()","D":"nn.MSELoss()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which of the following PyTorch modules is used to create a linear layer in a neural network?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch.nn as nn\nlinear = nn.Linear(in_features=128, out_features=64)</code></pre></div>","options":{"A":"nn.FullyConnected()","B":"nn.Dense()","C":"nn.Linear()","D":"nn.Connection()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What will be the shape of the tensor after applying a 2D convolutional layer with kernel size 3x3 and stride 1 on a 28x28 input image?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nimport torch.nn as nn\nconv = nn.Conv2d(in_channels=1, out_channels=16, kernel_size=3, stride=1)\ninput_image = torch.randn(1, 1, 28, 28)\noutput = conv(input_image)\nprint(output.shape)</code></pre></div>","options":{"A":"torch.Size([1, 16, 26, 26])","B":"torch.Size([1, 16, 28, 28])","C":"torch.Size([1, 16, 30, 30])","D":"torch.Size([1, 16, 25, 25])"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which method is used to save a PyTorch model's state dictionary to a file?\n\n<div style='border:1px solid black; padding:10px;'><pre><code>import torch\nmodel = torch.nn.Linear(10, 2)\ntorch.save(model.state_dict(), 'model.pth')</code></pre></div>","options":{"A":"torch.save_model()","B":"torch.save()","C":"torch.store()","D":"torch.serialize()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to concatenate a sequence of tensors along a specified dimension?","options":{"A":"torch.cat()","B":"torch.stack()","C":"torch.concat()","D":"torch.merge()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How can you create a tensor from a numpy array in PyTorch?","options":{"A":"torch.tensor(np_array)","B":"torch.from_numpy(np_array)","C":"torch.tensor_from_numpy(np_array)","D":"torch.tensor_like(np_array)"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which method is used to change the shape of a tensor without changing its data?","options":{"A":"tensor.transpose()","B":"tensor.reshape()","C":"tensor.resize()","D":"tensor.reformat()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you perform an element-wise multiplication of two tensors in PyTorch?","options":{"A":"torch.matmul(tensor1, tensor2)","B":"torch.dot(tensor1, tensor2)","C":"tensor1 * tensor2","D":"torch.multiply(tensor1, tensor2)"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which of the following PyTorch functions returns a tensor filled with random numbers from a normal distribution?","options":{"A":"torch.rand()","B":"torch.randn()","C":"torch.random_normal()","D":"torch.normal()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What does the 'requires_grad' parameter do when creating a tensor in PyTorch?","options":{"A":"Enables automatic differentiation","B":"Sets the tensor to be constant","C":"Initializes the tensor with random values","D":"Allocates the tensor on GPU"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to apply the ReLU activation function to a tensor?","options":{"A":"torch.relu()","B":"torch.sigmoid()","C":"torch.tanh()","D":"torch.activation()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method detaches the tensor from the current computation graph?","options":{"A":"tensor.detach()","B":"tensor.no_grad()","C":"tensor.stop_grad()","D":"tensor.detach_()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"How do you create a tensor of a specified shape with all elements set to a particular value?","options":{"A":"torch.full(size, value)","B":"torch.fill(size, value)","C":"torch.ones(size, value)","D":"torch.constant(size, value)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch function is used to create a tensor with a specified diagonal?","options":{"A":"torch.diagonal()","B":"torch.diag()","C":"torch.diagflat()","D":"torch.diag_embed()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to calculate the mean of all elements in a tensor?","options":{"A":"torch.mean(tensor)","B":"torch.sum(tensor) / tensor.numel()","C":"tensor.mean()","D":"tensor.sum() / tensor.numel()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How can you clone a tensor while retaining the computation graph?","options":{"A":"tensor.clone()","B":"tensor.detach().clone()","C":"tensor.copy()","D":"tensor.clone().detach()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function in PyTorch provides a random permutation of integers from 0 to n-1?","options":{"A":"torch.randperm(n)","B":"torch.permute(n)","C":"torch.shuffle(n)","D":"torch.random(n)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What will be the result of applying torch.transpose(tensor, 0, 1) to a 2D tensor?","options":{"A":"The tensor will be transposed along dimensions 0 and 1","B":"The tensor will be rotated by 90 degrees","C":"The tensor will be flattened","D":"The tensor will remain unchanged"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"How do you convert a PyTorch tensor to a NumPy array?","options":{"A":"tensor.to_numpy()","B":"tensor.numpy()","C":"torch.numpy(tensor)","D":"torch.to_numpy(tensor)"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the purpose of the DataLoader class in PyTorch?","options":{"A":"To preprocess data","B":"To load data in batches","C":"To shuffle data","D":"To save data"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to compute the element-wise absolute value of a tensor?","options":{"A":"torch.abs()","B":"torch.absolute()","C":"torch.abs_value()","D":"torch.elementwise_abs()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What will be the shape of a tensor after applying torch.unsqueeze(tensor, 0) to a 1D tensor?","options":{"A":"(tensor.size(), 1)","B":"(1, tensor.size())","C":"(tensor.size(), )","D":"(tensor.size() + 1,)"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to split a tensor into multiple sub-tensors?","options":{"A":"torch.split()","B":"torch.chunk()","C":"torch.divide()","D":"torch.section()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What will be the output of torch.argmax(tensor) if tensor is a 1D tensor with multiple maximum values?","options":{"A":"The index of the first maximum value","B":"The index of the last maximum value","C":"An array of indices of all maximum values","D":"An error"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which method in PyTorch is used to ensure that operations within its context are not tracked for gradient computation?","options":{"A":"torch.no_grad()","B":"torch.stop_grad()","C":"torch.disable_grad()","D":"torch.grad_off()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which function is used to initialize a tensor with values from a uniform distribution?","options":{"A":"torch.uniform()","B":"torch.rand()","C":"torch.rand_uniform()","D":"torch.uniform_rand()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What is the purpose of torch.nn.Module in PyTorch?","options":{"A":"To create layers of a neural network","B":"To define loss functions","C":"To define activation functions","D":"To load and preprocess data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How can you create a tensor that requires gradient computation and is initialized with random values?","options":{"A":"torch.rand(size, requires_grad=True)","B":"torch.tensor(size, requires_grad=True)","C":"torch.random(size, requires_grad=True)","D":"torch.randn(size, requires_grad=True)"},"correct_answers":["A","D"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does the function torch.exp(tensor) compute?","options":{"A":"The exponential of each element","B":"The exponent of each element","C":"The power of each element","D":"The logarithm of each element"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you apply dropout to a tensor in PyTorch during training?","options":{"A":"torch.nn.Dropout(p=0.5)(tensor)","B":"torch.nn.Dropout(p=0.5)","C":"torch.dropout(tensor, p=0.5)","D":"torch.nn.functional.dropout(tensor, p=0.5)"},"correct_answers":["A","D"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What is the output shape of torch.flatten(input, start_dim=1) when applied to a tensor of shape (2, 3, 4)?","options":{"A":"(2, 12)","B":"(6, 4)","C":"(2, 3, 4)","D":"(2, 4, 3)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How can you move a model to GPU in PyTorch?","options":{"A":"model.to('cuda')","B":"model.to_gpu()","C":"model.cuda()","D":"model.gpu()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the dot product of two 1D tensors?","options":{"A":"torch.dot(tensor1, tensor2)","B":"torch.matmul(tensor1, tensor2)","C":"torch.mm(tensor1, tensor2)","D":"torch.mul(tensor1, tensor2)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method is used to update the weights of a neural network in PyTorch?","options":{"A":"optimizer.step()","B":"optimizer.update()","C":"optimizer.apply()","D":"optimizer.run()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What is the output of torch.arange(0, 10, 2)?","options":{"A":"tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])","B":"tensor([0, 2, 4, 6, 8])","C":"tensor([0, 2, 4, 6, 8, 10])","D":"tensor([0, 3, 6, 9])"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you perform backpropagation in PyTorch?","options":{"A":"loss.backward()","B":"loss.backprop()","C":"torch.backward()","D":"torch.backprop(loss)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function returns the standard deviation of all elements in a tensor?","options":{"A":"torch.std(tensor)","B":"torch.variance(tensor)","C":"tensor.std()","D":"tensor.var()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What does the function torch.mm(tensor1, tensor2) perform?","options":{"A":"Element-wise multiplication","B":"Matrix multiplication","C":"Dot product","D":"Concatenation"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"How can you generate a tensor with values sampled from a Poisson distribution?","options":{"A":"torch.poisson()","B":"torch.poisson_dist()","C":"torch.poisson_sampling()","D":"torch.poisson(lambda)"},"correct_answers":["D"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which function is used to compute the softmax of a tensor?","options":{"A":"torch.nn.functional.softmax()","B":"torch.nn.Softmax()","C":"torch.softmax()","D":"torch.functional.Softmax()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does torch.bmm(tensor1, tensor2) perform?","options":{"A":"Element-wise multiplication","B":"Batch matrix-matrix product","C":"Dot product","D":"Concatenation"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How can you perform element-wise comparison of two tensors for equality?","options":{"A":"torch.equal(tensor1, tensor2)","B":"torch.eq(tensor1, tensor2)","C":"tensor1 == tensor2","D":"torch.compare(tensor1, tensor2)"},"correct_answers":["B","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to create a one-hot encoded tensor?","options":{"A":"torch.one_hot()","B":"torch.nn.functional.one_hot()","C":"torch.nn.OneHot()","D":"torch.functional.OneHot()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the effect of applying torch.nn.functional.normalize() to a tensor?","options":{"A":"Scales the tensor to a mean of 0 and standard deviation of 1","B":"Normalizes the tensor along a specified dimension","C":"Applies L2 normalization","D":"Applies L1 normalization"},"correct_answers":["B","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does torch.squeeze(tensor) do?","options":{"A":"Removes all dimensions of size 1","B":"Flattens the tensor","C":"Normalizes the tensor","D":"Adds a dimension of size 1"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which function in PyTorch performs a 2D convolution?","options":{"A":"torch.nn.functional.conv2d()","B":"torch.nn.Conv2d()","C":"torch.conv2d()","D":"torch.nn.functional.convolution2d()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"How can you ensure a tensor is detached from its computation graph and converted to a numpy array?","options":{"A":"tensor.detach().numpy()","B":"tensor.to_numpy()","C":"torch.detach(tensor).numpy()","D":"tensor.numpy(detached=True)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What does the function torch.cumsum(tensor, dim) compute?","options":{"A":"Cumulative sum along a specified dimension","B":"Element-wise sum of all dimensions","C":"Cumulative product along a specified dimension","D":"Sum of tensor elements"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which of the following functions is used to create a tensor from a list?","options":{"A":"torch.tensor()","B":"torch.from_list()","C":"torch.array()","D":"torch.from_array()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you compute the eigenvalues and eigenvectors of a square matrix tensor?","options":{"A":"torch.eig()","B":"torch.eigen()","C":"torch.linalg.eig()","D":"torch.linalg.eigen()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does torch.Tensor.expand() do to a tensor?","options":{"A":"Expands the dimensions of a tensor","B":"Repeats the tensor along specified dimensions","C":"Changes the shape of a tensor","D":"Concatenates tensors along specified dimensions"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you calculate the inverse of a square matrix tensor?","options":{"A":"torch.inverse(tensor)","B":"torch.linalg.inv(tensor)","C":"torch.inv(tensor)","D":"torch.linalg.inv()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which function in PyTorch is used to initialize the weights of a model using Xavier initialization?","options":{"A":"torch.nn.init.xavier_uniform_()","B":"torch.nn.init.xavier_normal_()","C":"torch.nn.init.kaiming_uniform_()","D":"torch.nn.init.normal_()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to stack tensors along a new dimension in PyTorch?","options":{"A":"torch.cat()","B":"torch.stack()","C":"torch.vstack()","D":"torch.hstack()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method is used to apply layer normalization in PyTorch?","options":{"A":"torch.nn.LayerNorm()","B":"torch.nn.BatchNorm()","C":"torch.nn.GroupNorm()","D":"torch.nn.InstanceNorm()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which activation function is commonly used in generative adversarial networks (GANs)?","options":{"A":"torch.nn.ReLU()","B":"torch.nn.Tanh()","C":"torch.nn.Sigmoid()","D":"torch.nn.LeakyReLU()"},"correct_answers":["D"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch function is used to calculate the gradient penalty in Wasserstein GANs?","options":{"A":"torch.autograd.grad()","B":"torch.nn.GradientPenalty()","C":"torch.nn.functional.gradient_penalty()","D":"torch.nn.gradient_penalty()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which optimizer is typically used for training transformers and LLMs?","options":{"A":"torch.optim.SGD","B":"torch.optim.AdamW","C":"torch.optim.Adam","D":"torch.optim.RMSprop"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the purpose of the nn.Transformer module in PyTorch?","options":{"A":"To implement RNNs","B":"To implement CNNs","C":"To implement the Transformer architecture","D":"To implement GANs"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function computes the cosine similarity between two tensors?","options":{"A":"torch.nn.CosineSimilarity()","B":"torch.cosine_similarity()","C":"torch.nn.functional.cosine_similarity()","D":"torch.nn.CosineSim()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you define a custom dataset class for loading images in PyTorch?","options":{"A":"Extend torch.utils.data.Dataset and override __len__ and __getitem__","B":"Extend torch.utils.data.DataLoader and override __len__ and __getitem__","C":"Extend torch.nn.Module and override __len__ and __getitem__","D":"Extend torch.nn.DataLoader and override __len__ and __getitem__"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to perform max pooling on a 2D tensor in PyTorch?","options":{"A":"torch.nn.functional.max_pool2d()","B":"torch.nn.functional.max_pool()","C":"torch.nn.MaxPool2d()","D":"torch.nn.MaxPooling2d()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch class is used to define the encoder layer in a transformer model?","options":{"A":"torch.nn.TransformerEncoderLayer","B":"torch.nn.TransformerDecoderLayer","C":"torch.nn.TransformerLayer","D":"torch.nn.TransformerBlock"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which loss function is typically used for binary classification tasks in PyTorch?","options":{"A":"torch.nn.MSELoss()","B":"torch.nn.CrossEntropyLoss()","C":"torch.nn.BCELoss()","D":"torch.nn.L1Loss()"},"correct_answers":["C"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you freeze the parameters of a model during training in PyTorch?","options":{"A":"Set requires_grad=False for each parameter","B":"Set requires_grad=True for each parameter","C":"Set requires_grad=False for the model","D":"Set requires_grad=True for the model"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to create a convolutional neural network layer?","options":{"A":"torch.nn.Conv1d()","B":"torch.nn.Conv2d()","C":"torch.nn.Conv3d()","D":"torch.nn.ConvLayer()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the purpose of the nn.Embedding layer in PyTorch?","options":{"A":"To embed categorical features into continuous vectors","B":"To reduce the dimensionality of input data","C":"To apply dropout to the input","D":"To normalize the input data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to perform element-wise addition of two tensors?","options":{"A":"torch.add()","B":"torch.sum()","C":"torch.matmul()","D":"torch.plus()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you initialize the hidden state of an LSTM in PyTorch?","options":{"A":"torch.zeros(num_layers, batch_size, hidden_size)","B":"torch.ones(num_layers, batch_size, hidden_size)","C":"torch.randn(num_layers, batch_size, hidden_size)","D":"torch.empty(num_layers, batch_size, hidden_size)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which method is used to apply batch normalization in PyTorch?","options":{"A":"torch.nn.BatchNorm1d()","B":"torch.nn.BatchNorm2d()","C":"torch.nn.BatchNorm3d()","D":"All of the above"},"correct_answers":["D"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you define a simple feedforward neural network with one hidden layer in PyTorch?","options":{"A":"Use nn.Sequential with nn.Linear layers","B":"Use nn.Module with nn.Linear layers","C":"Use nn.ModuleList with nn.Linear layers","D":"Use nn.ModuleDict with nn.Linear layers"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function in PyTorch is used to detach a tensor from its computation graph?","options":{"A":"tensor.detach()","B":"tensor.detach_()","C":"tensor.clone()","D":"tensor.requires_grad_(False)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch module is used to create a multi-head attention layer?","options":{"A":"torch.nn.MultiheadAttention()","B":"torch.nn.Attention()","C":"torch.nn.MultiAttention()","D":"torch.nn.AttentionLayer()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to calculate the log softmax of a tensor?","options":{"A":"torch.nn.functional.log_softmax()","B":"torch.nn.LogSoftmax()","C":"torch.log_softmax()","D":"torch.functional.LogSoftmax()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you apply dropout with a probability of 0.5 to a tensor in PyTorch during training?","options":{"A":"torch.nn.functional.dropout(tensor, p=0.5)","B":"torch.nn.Dropout(p=0.5)(tensor)","C":"torch.nn.dropout(tensor, p=0.5)","D":"torch.nn.functional.Dropout(p=0.5)"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the mean squared error loss in PyTorch?","options":{"A":"torch.nn.MSELoss()","B":"torch.nn.MeanSquaredError()","C":"torch.nn.L1Loss()","D":"torch.nn.CrossEntropyLoss()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you compute the gradients of a tensor with respect to some loss in PyTorch?","options":{"A":"loss.backward()","B":"tensor.grad()","C":"tensor.backward()","D":"torch.backward(loss)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to perform a 1D convolution on a tensor in PyTorch?","options":{"A":"torch.nn.functional.conv1d()","B":"torch.nn.Conv1d()","C":"torch.conv1d()","D":"torch.nn.Convolution1d()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method is used to create a custom neural network module in PyTorch?","options":{"A":"Subclassing torch.nn.Module and overriding __init__ and forward","B":"Subclassing torch.nn.Sequential and overriding __init__ and forward","C":"Subclassing torch.nn.ModuleList and overriding __init__ and forward","D":"Subclassing torch.nn.ModuleDict and overriding __init__ and forward"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does torch.nn.ReLU() do when applied to a tensor?","options":{"A":"Applies the ReLU activation function","B":"Applies the LeakyReLU activation function","C":"Applies the Sigmoid activation function","D":"Applies the Tanh activation function"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you perform gradient clipping in PyTorch?","options":{"A":"torch.nn.utils.clip_grad_norm_()","B":"torch.nn.utils.clip_grad()","C":"torch.nn.utils.clip()","D":"torch.nn.clip_grad_norm()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to compute the inverse of a square matrix?","options":{"A":"torch.inverse()","B":"torch.linalg.inv()","C":"torch.matrix_inverse()","D":"torch.matrix_inv()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the purpose of the nn.Dropout layer in PyTorch?","options":{"A":"To prevent overfitting by randomly setting some elements to zero during training","B":"To reduce the dimensionality of the input","C":"To increase the learning rate","D":"To normalize the input data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the cross-entropy loss in PyTorch?","options":{"A":"torch.nn.CrossEntropyLoss()","B":"torch.nn.CrossEntropy()","C":"torch.nn.functional.cross_entropy()","D":"torch.nn.functional.cross_entropy_loss()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you save a trained PyTorch model to disk?","options":{"A":"torch.save(model.state_dict(), 'model.pth')","B":"torch.save_model(model, 'model.pth')","C":"torch.save(model, 'model.pth')","D":"torch.save_state_dict(model, 'model.pth')"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to perform max pooling on a 3D tensor in PyTorch?","options":{"A":"torch.nn.functional.max_pool3d()","B":"torch.nn.functional.max_pool()","C":"torch.nn.MaxPool3d()","D":"torch.nn.MaxPooling3d()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch class is used to define the decoder layer in a transformer model?","options":{"A":"torch.nn.TransformerDecoderLayer","B":"torch.nn.TransformerEncoderLayer","C":"torch.nn.TransformerLayer","D":"torch.nn.TransformerBlock"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does the torch.cat() function do in PyTorch?","options":{"A":"Concatenates a sequence of tensors along an existing dimension","B":"Stacks a sequence of tensors along a new dimension","C":"Splits a tensor into multiple sub-tensors","D":"Reshapes a tensor"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method is used to load a PyTorch model from a saved state dictionary?","options":{"A":"model.load_state_dict(torch.load('model.pth'))","B":"model.load(torch.load('model.pth'))","C":"torch.load(model, 'model.pth')","D":"torch.load_state_dict(model, 'model.pth')"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the product of all elements in a tensor in PyTorch?","options":{"A":"torch.prod()","B":"torch.product()","C":"tensor.prod()","D":"tensor.product()"},"correct_answers":["A","C"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you define a bidirectional LSTM in PyTorch?","options":{"A":"torch.nn.LSTM(input_size, hidden_size, num_layers, bidirectional=True)","B":"torch.nn.BidirectionalLSTM(input_size, hidden_size, num_layers)","C":"torch.nn.LSTM(input_size, hidden_size, num_layers, bidirectional=False)","D":"torch.nn.BiLSTM(input_size, hidden_size, num_layers)"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What is the purpose of the nn.Softmax layer in PyTorch?","options":{"A":"To apply the softmax activation function to the input","B":"To apply the ReLU activation function to the input","C":"To apply dropout to the input","D":"To normalize the input data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"How do you apply gradient accumulation in PyTorch?","options":{"A":"Accumulate gradients over multiple batches before calling optimizer.step()","B":"Call optimizer.step() after every batch","C":"Call loss.backward() after every batch","D":"Use torch.nn.utils.clip_grad_norm_() after every batch"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which PyTorch function is used to calculate the Euclidean norm of a tensor?","options":{"A":"torch.norm()","B":"torch.linalg.norm()","C":"torch.euclidean_norm()","D":"torch.linalg.euclidean_norm()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What does torch.nn.Bilinear do in PyTorch?","options":{"A":"Applies a bilinear transformation to the input data","B":"Applies a linear transformation to the input data","C":"Applies a bilinear interpolation to the input data","D":"Applies a nonlinear transformation to the input data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the element-wise minimum of two tensors in PyTorch?","options":{"A":"torch.minimum()","B":"torch.min()","C":"torch.elementwise_min()","D":"torch.min_element()"},"correct_answers":["B"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch function is used to create a 1D tensor with values evenly spaced between two specified values?","options":{"A":"torch.linspace()","B":"torch.range()","C":"torch.arange()","D":"torch.spaced_values()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What does the torch.mm() function do in PyTorch?","options":{"A":"Performs a matrix multiplication of two 2D tensors","B":"Performs an element-wise multiplication of two tensors","C":"Computes the dot product of two 1D tensors","D":"Concatenates two tensors along a specified dimension"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which method is used to implement gradient clipping by value in PyTorch?","options":{"A":"torch.nn.utils.clip_grad_value_()","B":"torch.nn.clip_grad_value()","C":"torch.nn.utils.clip_grad()","D":"torch.nn.clip_grad()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to perform 3D convolution on a tensor in PyTorch?","options":{"A":"torch.nn.functional.conv3d()","B":"torch.nn.Conv3d()","C":"torch.nn.Convolution3d()","D":"torch.conv3d()"},"correct_answers":["A","B"],"is_multiple_choice":true}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"What is the effect of applying torch.nn.utils.weight_norm() to a layer in PyTorch?","options":{"A":"Normalizes the weights of the layer","B":"Normalizes the output of the layer","C":"Normalizes the gradients of the layer","D":"Normalizes the input to the layer"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function is used to compute the absolute value of each element in a tensor in PyTorch?","options":{"A":"torch.abs()","B":"torch.absolute()","C":"torch.elementwise_abs()","D":"torch.abs_value()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch function is used to calculate the cumulative sum of tensor elements along a specified dimension?","options":{"A":"torch.cumsum()","B":"torch.sum()","C":"torch.cumulative_sum()","D":"torch.sum_cumulative()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"What is the purpose of the nn.ConvTranspose2d layer in PyTorch?","options":{"A":"To perform a transposed convolution (deconvolution) on 2D data","B":"To perform a 2D convolution on transposed data","C":"To perform a 2D convolution followed by a transpose operation","D":"To perform a 2D transpose operation on convolved data"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"hard","type":"multiple_choice","question":"Which PyTorch function is used to compute the spectral norm of a tensor?","options":{"A":"torch.nn.utils.spectral_norm()","B":"torch.spectral_norm()","C":"torch.nn.functional.spectral_norm()","D":"torch.nn.spectral_norm()"},"correct_answers":["A"],"is_multiple_choice":false}
{"skill":"PyTorch","difficulty":"medium","type":"multiple_choice","question":"Which function in PyTorch performs an element-wise comparison between two tensors and returns a tensor of the same shape with values of True or False?","options":{"A":"torch.eq()","B":"torch.compare()","C":"torch.elementwise_eq()","D":"torch.equal()"},"correct_answers":["A"],"is_multiple_choice":false}